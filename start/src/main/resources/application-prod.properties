# 应用名称
spring.application.name=ocean-visualization

# 应用服务 WEB 访问端口
server.port=8080

# 环境设置: dev, test, prod
#spring.profiles.active=prod

spring.resource.static-locations=classpath:/static/,classpath:/public/,classpath:/META-INF/resources/

# windows项目目录配置
#com.csu.ocean.userfile-path=D:/ocean/user_ocean_data/
#com.csu.ocean.serverfile-path=D:/geoserver/ocean_data_temp/
#com.csu.ocean.servertiffile-path=D:/geoserver/ocean_data/
#
#com.csu.typhoon.userfile-path=D:/ocean/user_typhoon_data/
#com.csu.typhoon.serverfile-path=D:/geoserver/typhoon_data/
#com.csu.typhoon.file-property-path=D:/geoserver/property/
#
#com.csu.ocean.userstyle-path=D:/ocean/user_style_data/
#com.csu.typhoon.stylefile-path=D:/geoserver/stylefile/
#
#com.csu.projectPath=D:/Java/JavaEE/IdeaProjects/

# Linux项目目录配置
com.csu.ocean.userfile-path=/home/ocean/user_ocean_data/
com.csu.typhoon.userfile-path=/home/ocean/user_typhoon_data/
com.csu.ocean.userstyle-path=/home/ocean/user_style_data/

com.csu.ocean.serverfile-path=/home/ocean-visualization-parent/geoserver/ocean_data_temp/
com.csu.ocean.servertiffile-path=/home/ocean-visualization-parent/geoserver/ocean_data/
com.csu.typhoon.serverfile-path=/home/ocean-visualization-parent/geoserver/typhoon_data/
com.csu.typhoon.file-property-path=/home/ocean-visualization-parent/geoserver/property/
com.csu.typhoon.stylefile-path=/home/ocean-visualization-parent/geoserver/stylefile/

com.csu.projectPath=/home/ocean-visualization-parent/IdeaProjects/

# geoserver配置
#geoserver.url=http://localhost:8089/geoserver
geoserver.url=http://172.17.0.3:8080/geoserver/web
geoserver.username=admin
geoserver.password=geoserver
geoserver.workspace=cite

# 日志配置
#logging.config=classpath:logback-spring.xml
logging.file.name=/home/ocean-visualization-parent/oceanLog.log

# THYMELEAF (ThymeleafAutoConfiguration)
# 开启模板缓存（默认值： true ）
#spring.thymeleaf.cache=true
## 检查模板是否存在，然后再呈现
#spring.thymeleaf.check-template=true
## 检查模板位置是否正确（默认值 :true ）
#spring.thymeleaf.check-template-location=true
##Content-Type 的值（默认值： text/html ）
#spring.thymeleaf.content-type=text/html
## 开启 MVC Thymeleaf 视图解析（默认值： true ）
#spring.thymeleaf.enabled=true
## 模板编码
#spring.thymeleaf.encoding=UTF-8
## 要被排除在解析之外的视图名称列表，用逗号分隔
#spring.thymeleaf.excluded-view-names=
## 要运用于模板之上的模板模式。另见 StandardTemplate-ModeHandlers( 默认值： HTML5)
#spring.thymeleaf.mode=HTML5
## 在构建 URL 时添加到视图名称前的前缀（默认值： classpath:/templates/ ）
#spring.thymeleaf.prefix=classpath:/templates/
## 在构建 URL 时添加到视图名称后的后缀（默认值： .html ）
#spring.thymeleaf.suffix=.html


#************H2  Begin****************
#创建表的MySql语句位置
#spring.datasource.schema=classpath:schema.sql
#插入数据的MySql语句的位置
#spring.datasource.data=classpath:data.sql

#remote visit
#spring.h2.console.settings.web-allow-others=true
#console url。Spring启动后，可以访问 http://127.0.0.1:8080/h2-console 查看数据库
#spring.h2.console.path=/h2-console
#default true。咱也可以用命令行访问好数据库，感兴趣的同学点这个链接 http://www.h2database.com/html/tutorial.html?highlight=Mac&search=mac#firstFound
#spring.h2.console.enabled=true
#spring.h2.console.settings.trace=true

#指定数据库的种类，这里 file意思是文件型数据库
#spring.datasource.url=jdbc:h2:file:~/test
#用户名密码不需要改，都是临时值
#spring.datasource.username=san
#spring.datasource.password=
#指定Driver，有了Driver才能访问数据库
#spring.datasource.driver-class-name=org.h2.Driver


#下面这些内容是为了让MyBatis映射
#指定Mybatis的Mapper文件
#mybatis.mapper-locations=classpath:mappers/*xml
#指定Mybatis的实体目录
#mybatis.type-aliases-package=com.csu.oceanvisualization.mybatis.entity


